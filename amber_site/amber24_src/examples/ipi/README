The i-PI software is a MD driver that can perform classical MD and 
centroid path integral MD using external client programs to evaluate
the potential energy and forces.  Sander has been modified to be
compatible with the i-PI interface. The i-PI program is launched 
and it acts as a "server", which sends messages to client processes
through an internet protocol.  The i-PI input file assigns a
port number through which messages are sent and received.
One-or-more instances of sander can be launched as "client"
processes. When launched, the server IP address and port number
are specified with the -host and -port command line arguments.

In this example, we use i-PI to perform a brief classical MD
simulation in the NVE ensemble to demonstrate energy conservation.
The test system is a small phosphate that has been solvated and
equilibrated with TIP4P/Ew waters. In this example, the solvent is
changed to the flexible q-SPC/Fw water model.  The system is briefly
re-equilibrated with sander in the NVT and NVE ensembles.  The amber
restart file is transformed to a xyz-format expected by i-PI, and i-PI
is used to perform classical MD in the NVE ensemble.


0_BuildParm.sh runs tleap using tleap.in to transform MOL.pdb,
MOL.frcmod, and MOL.lib to qspcfw.parm7 and qspcfw.rst7.

1_EquilMD.sh runs sander with nvt.mdin to create nvt.rst7 from
qspcfw.rst7. It then runs sander with nve.mdin to create nve.rst7 from
nvt.rst7.

2_MakeIPIInput.sh uses parmutils-rst2ipixyz.py to create the i-PI
input file (nve.xml) and starting structure (nve.xyz) from nve.rst7.
Because our system contained restraints (system.disang), the script
will also transform the restraints to a plumed-compatible file called
system.disang.plumed.

3_RunIPI.sh launches i-PI with the nve.xml input file, and then
launches one instance of sander to compute the energies and forces.


